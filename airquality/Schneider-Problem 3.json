{"paragraphs":[{"text":"%md\n#Final Problem 3: Exploring Air Quality Data\nUsing data from the EPA's website (https://aqs.epa.gov/aqsweb/airdata/download_files.html#Raw) and the U.S. Census Bureau's regions (https://raw.githubusercontent.com/cphalpert/census-regions/master/us%20census%20bureau%20regions%20and%20divisions.csv), we'll expore air quality data. \n\nTo run this, all input files should either be in the user/zeppelin directory or an s3 bucket. If you are running this in Hortonworks, it's recommended that you increase the number of cores allocated. \n\n(Running in AWS on 10 cores produced reasonable times. Four cores on Hadoop took an excessively long time.)","user":"anonymous","dateUpdated":"2018-11-08T12:51:08+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Final Problem 3: Exploring Air Quality Data</h1>\n<p>Using data from the EPA's website (https://aqs.epa.gov/aqsweb/airdata/download_files.html#Raw) and the U.S. Census Bureau's regions (https://raw.githubusercontent.com/cphalpert/census-regions/master/us%20census%20bureau%20regions%20and%20divisions.csv), we'll expore air quality data.</p>\n<p>To run this, all input files should either be in the user/zeppelin directory or an s3 bucket. If you are running this in Hortonworks, it's recommended that you increase the number of cores allocated.</p>\n<p>(Running in AWS on 10 cores produced reasonable times. Four cores on Hadoop took an excessively long time.)</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751505_-1803943215","id":"20181016-135956_732932256","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:08+0000","dateFinished":"2018-11-08T12:51:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:695"},{"text":"//Set this variable to your s3 bucket if you're doing this on Amazon, otherwise it defaults to the /user/zeppelin/ directory:\nval path = \"\"\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:08+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"path: String = \"\"\n"}]},"apps":[],"jobName":"paragraph_1540520751507_-1803173717","id":"20181026-021112_1667135113","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:09+0000","dateFinished":"2018-11-08T12:52:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:696"},{"text":"//imports\nimport spark.implicits._\nimport org.apache.spark.sql.types\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.DataFrame\n\n\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\nimport org.apache.spark.sql.types\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1540520751507_-1803173717","id":"20181015-133345_517173041","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:13+0000","dateFinished":"2018-11-08T12:52:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:697"},{"text":"\n\n//load region & divison data\nval regions = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"division.csv\");\nregions.createOrReplaceTempView(\"v_regions\");\n\n//load PM2.5 data & filter out all the exceptional events (qualifier anything but null) and uncertain events\nval pm25 = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"hourly_88101_2017.csv\").filter(\"Qualifier is null AND Uncertainty is null\");\npm25.createOrReplaceTempView(\"v_pm25\");\n\n\n//Clean up column names and get just the columns we want.\nval pm25 = sqlContext.sql(\n    \"\"\"\n    SELECT `State Name` AS State, `County Name` AS County, `Site Num` AS Site, POC, Latitude, Longitude, `Date Local` as Date, `Time Local` AS Time, \n    `Parameter Name` AS Parameter, \n    `Sample Measurement` AS Measurement, \n    `Units of Measure` AS units, MDL, \n    `Method Type` AS MethodType, \n    `Method Name` AS MethodName\n    FROM v_pm25\n   \n    \"\"\"\n    )\n\n \n /* There are measurements that are negative. That shouldn't be the case. According to this thread:\nhttps://www.researchgate.net/post/How_can_I_deal_with_negative_and_zero_concentrations_of_PM25_PM10_and_gas_data\nNegative measurements and measurements that are less than the MDL should be reset to be half the MDL. \n*/\n\nval fix_measure = when(\n        (col(\"Measurement\") < col(\"MDL\")), col(\"MDL\")/2\n    ).otherwise(col(\"Measurement\"))\n    \nval pm25Clean = pm25.withColumn(\"Measurement\", fix_measure) //fix the measurements\n    .groupBy(\"State\", \"County\", \"Site\", \"Latitude\", \"Longitude\", \"Date\", \"Time\", \"Parameter\").agg(avg(\"Measurement\").alias(\"Measurement\"))//Group by site and average the measurements.\n    .withColumn(\"HealthCategory\", expr(\n        \"CASE WHEN Measurement < 12 THEN 'Satisfactory'  WHEN Measurement >= 12 and Measurement < 35 THEN 'Acceptable' WHEN Measurement >= 35 and Measurement < 55 THEN 'Sensitive Effected' WHEN Measurement >= 55 and Measurement < 150 THEN 'Everyone Effected'  WHEN Measurement >= 150 and Measurement < 250 THEN 'Health Warning' ELSE 'Health Alert' END\")) //Add a column for health category (categories described below)\n\n//make a new view for pm25\npm25Clean.createOrReplaceTempView(\"v_pm25\");   \n\n//join to add region data\nvar pm25WithRegions = sqlContext.sql(\n    \"\"\"\n    SELECT p.*, r.region\n    FROM v_pm25 p INNER JOIN v_regions r ON p.State = r.State\n    \"\"\"\n    )\n\n//make a new view for pm25\npm25WithRegions.createOrReplaceTempView(\"v_pm25\");   \n\n\npm25WithRegions.show()\n  ","user":"anonymous","dateUpdated":"2018-11-08T12:51:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"regions: org.apache.spark.sql.DataFrame = [State: string, State Code: string ... 2 more fields]\npm25: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [State Code: string, County Code: string ... 22 more fields]\npm25: org.apache.spark.sql.DataFrame = [State: string, County: string ... 12 more fields]\nfix_measure: org.apache.spark.sql.Column = CASE WHEN (Measurement < MDL) THEN (MDL / 2) ELSE Measurement END\npm25Clean: org.apache.spark.sql.DataFrame = [State: string, County: string ... 8 more fields]\npm25WithRegions: org.apache.spark.sql.DataFrame = [State: string, County: string ... 9 more fields]\n+-------+---------+----+---------+---------+----------+-----+--------------------+-----------+--------------+------+\n|  State|   County|Site| Latitude|Longitude|      Date| Time|           Parameter|Measurement|HealthCategory|region|\n+-------+---------+----+---------+---------+----------+-----+--------------------+-----------+--------------+------+\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-01-15|08:00|PM2.5 - Local Con...|       27.3|    Acceptable| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-01-29|06:00|PM2.5 - Local Con...|        8.4|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-01-29|18:00|PM2.5 - Local Con...|        6.4|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-02-03|02:00|PM2.5 - Local Con...|        7.4|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-04-05|04:00|PM2.5 - Local Con...|        6.4|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-04-11|09:00|PM2.5 - Local Con...|        7.7|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-04-13|15:00|PM2.5 - Local Con...|        7.9|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-04-17|18:00|PM2.5 - Local Con...|        9.1|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-05-04|17:00|PM2.5 - Local Con...|        5.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-05-09|17:00|PM2.5 - Local Con...|        8.8|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-06-03|22:00|PM2.5 - Local Con...|        1.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-06-15|07:00|PM2.5 - Local Con...|        7.5|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-06-17|13:00|PM2.5 - Local Con...|        8.9|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-06-21|20:00|PM2.5 - Local Con...|        4.8|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-07-05|23:00|PM2.5 - Local Con...|        1.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-07-07|11:00|PM2.5 - Local Con...|        1.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-07-10|19:00|PM2.5 - Local Con...|        1.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-07-18|13:00|PM2.5 - Local Con...|        1.0|  Satisfactory| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-07-26|00:00|PM2.5 - Local Con...|       20.3|    Acceptable| South|\n|Alabama|Jefferson|0023|33.553056|  -86.815|2017-08-02|13:00|PM2.5 - Local Con...|        7.4|  Satisfactory| South|\n+-------+---------+----+---------+---------+----------+-----+--------------------+-----------+--------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1540520751508_-1805097462","id":"20181016-110518_1139872048","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:52:09+0000","dateFinished":"2018-11-08T12:53:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:698"},{"text":"%md\n## QUESTION 1:\n\nPM2.5 data can be broken into ranges that indicate air quality level. These are the ranges from the Purple Air site\n\n###Categories:\nNote, that Purple Air lists the categories as inclusive, which doesn't really make sense. For the actual calculation, the lower bound will be inclusive and the upper bound exclusive.\n0-12: Air Quality is Considered **Satisfactory** and air pollution poses little or no risk\n12-35: Air Quality is **Acceptable**, however for some pollutants, there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution\n35-55: Members of **sensitive** groups may experience health **effects**. The general public is not likely to be effected.\n55-150: **Everyone** may begin to experience health **effects**; members of more sensitive groups may experience more serious health effects.\n150-250: **Health Warning**s of emergency conditions. The entire population is likely to be effected.\n250+: **Health Alert**: everyone may experience more serious effects.\n\nConsider these ranges by region. For each region, what percentage of readings falls into each category? \n\n","dateUpdated":"2018-11-08T12:51:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>QUESTION 1:</h2>\n<p>PM2.5 data can be broken into ranges that indicate air quality level. These are the ranges from the Purple Air site</p>\n<h3>Categories:</h3>\n<p>Note, that Purple Air lists the categories as inclusive, which doesn't really make sense. For the actual calculation, the lower bound will be inclusive and the upper bound exclusive.\n<br  />0-12: Air Quality is Considered <strong>Satisfactory</strong> and air pollution poses little or no risk\n<br  />12-35: Air Quality is <strong>Acceptable</strong>, however for some pollutants, there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution\n<br  />35-55: Members of <strong>sensitive</strong> groups may experience health <strong>effects</strong>. The general public is not likely to be effected.\n<br  />55-150: <strong>Everyone</strong> may begin to experience health <strong>effects</strong>; members of more sensitive groups may experience more serious health effects.\n<br  />150-250: <strong>Health Warning</strong>s of emergency conditions. The entire population is likely to be effected.\n<br  />250+: <strong>Health Alert</strong>: everyone may experience more serious effects.</p>\n<p>Consider these ranges by region. For each region, what percentage of readings falls into each category?</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751509_-1805482211","id":"20181016-133325_1134145890","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:699","user":"anonymous","dateFinished":"2018-11-08T12:51:14+0000","dateStarted":"2018-11-08T12:51:14+0000"},{"text":"%sql\nSELECT c.region, c.healthCategory, totalByCategory, totalByRegion, round((totalByCategory/totalByRegion) * 100, 3) AS Percent\nFROM\n(SELECT region, healthCategory, count(Measurement) as totalByCategory\nFROM v_pm25\nGROUP BY region, healthCategory) c INNER JOIN \n(SELECT region, count(Measurement) AS totalByRegion\nFROM v_pm25\nGROUP BY region) r ON c.region = r.region\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:14+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"region\thealthCategory\ttotalByCategory\ttotalByRegion\tPercent\nMidwest\tEveryone Effected\t467\t936958\t0.05\nMidwest\tHealth Alert\t2\t936958\t0.0\nMidwest\tSatisfactory\t922756\t936958\t98.484\nMidwest\tSensitive Effected\t851\t936958\t0.091\nMidwest\tAcceptable\t12878\t936958\t1.374\nMidwest\tHealth Warning\t4\t936958\t0.0\nSouth\tEveryone Effected\t238\t579681\t0.041\nSouth\tAcceptable\t18157\t579681\t3.132\nSouth\tHealth Alert\t2\t579681\t0.0\nSouth\tSatisfactory\t560583\t579681\t96.705\nSouth\tHealth Warning\t7\t579681\t0.001\nSouth\tSensitive Effected\t694\t579681\t0.12\nWest\tEveryone Effected\t5196\t1481716\t0.351\nWest\tAcceptable\t40322\t1481716\t2.721\nWest\tSatisfactory\t1427908\t1481716\t96.369\nWest\tSensitive Effected\t8255\t1481716\t0.557\nWest\tHealth Warning\t11\t1481716\t0.001\nWest\tHealth Alert\t24\t1481716\t0.002\nNortheast\tEveryone Effected\t186\t774520\t0.024\nNortheast\tAcceptable\t8746\t774520\t1.129\nNortheast\tSatisfactory\t765093\t774520\t98.783\nNortheast\tSensitive Effected\t495\t774520\t0.064\n"}]},"apps":[],"jobName":"paragraph_1540520751509_-1805482211","id":"20181019-143041_709745354","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:52:11+0000","dateFinished":"2018-11-08T12:54:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:700"},{"text":"%sql\n--since the majority of all readings fall into the satisfactory category, filter that out to see how the readings of concern break down.\nSELECT c.region, c.healthCategory, totalByCategory, totalByRegion, round((totalByCategory/totalByRegion) * 100, 5) AS Percent\nFROM\n    (SELECT region, healthCategory, count(Measurement) as totalByCategory\n    FROM v_pm25\n    WHERE healthCategory != 'Satisfactory'\n    GROUP BY region, healthCategory) c INNER JOIN \n    (SELECT region, count(Measurement) AS totalByRegion\n    FROM v_pm25\n    WHERE healthCategory != 'Satisfactory'\n    GROUP BY region) r ON c.region = r.region\n\n\n","dateUpdated":"2018-11-08T12:51:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"Region","index":0,"aggr":"sum"}],"groups":[{"name":"Category","index":1,"aggr":"sum"}],"values":[{"name":"PercentOfReadings","index":4,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"region\thealthCategory\ttotalByCategory\ttotalByRegion\tPercent\nMidwest\tEveryone Effected\t467\t14202\t3.28827\nMidwest\tHealth Alert\t2\t14202\t0.01408\nMidwest\tSensitive Effected\t851\t14202\t5.99211\nMidwest\tAcceptable\t12878\t14202\t90.67737\nMidwest\tHealth Warning\t4\t14202\t0.02817\nSouth\tEveryone Effected\t238\t19098\t1.2462\nSouth\tAcceptable\t18157\t19098\t95.07278\nSouth\tHealth Alert\t2\t19098\t0.01047\nSouth\tHealth Warning\t7\t19098\t0.03665\nSouth\tSensitive Effected\t694\t19098\t3.63389\nWest\tEveryone Effected\t5196\t53808\t9.65656\nWest\tAcceptable\t40322\t53808\t74.93681\nWest\tSensitive Effected\t8255\t53808\t15.34158\nWest\tHealth Warning\t11\t53808\t0.02044\nWest\tHealth Alert\t24\t53808\t0.0446\nNortheast\tEveryone Effected\t186\t9427\t1.97306\nNortheast\tAcceptable\t8746\t9427\t92.77607\nNortheast\tSensitive Effected\t495\t9427\t5.25088\n"}]},"apps":[],"jobName":"paragraph_1540520751510_-1804327964","id":"20181016-142211_1161884846","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:701","user":"anonymous","dateFinished":"2018-11-08T12:55:10+0000","dateStarted":"2018-11-08T12:53:35+0000"},{"text":"%sql\n-- get the total by region, broken into under and over 12\nSELECT region, category, count(category) as Totalmeasurements\nFROM\n(\nSELECT region, CASE WHEN Measurement < 12 THEN 'Under 12' WHEN Measurement >=12 THEN '12 +' END as Category\nFROM v_pm25) i\nGROUP BY region, category\n","dateUpdated":"2018-11-08T12:51:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"region\tcategory\tTotalmeasurements\nSouth\t12 +\t19098\nWest\t12 +\t53808\nNortheast\tUnder 12\t765093\nMidwest\tUnder 12\t922756\nWest\tUnder 12\t1427908\nSouth\tUnder 12\t560583\nNortheast\t12 +\t9427\nMidwest\t12 +\t14202\n"}]},"apps":[],"jobName":"paragraph_1540520751511_-1804712713","id":"20181019-211132_774470698","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:702","user":"anonymous","dateFinished":"2018-11-08T12:55:44+0000","dateStarted":"2018-11-08T12:54:28+0000"},{"text":"%md \n##Question 2\nMonitor sites are coded for location setting using one of three types of locations: Rural, Suburban, or Urban/City Center. Looking at just those readings that would affect at least sensitive individuals, (35 and higher), how many readings were there by day of week for each location type?\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Question 2</h2>\n<p>Monitor sites are coded for location setting using one of three types of locations: Rural, Suburban, or Urban/City Center. Looking at just those readings that would affect at least sensitive individuals, (35 and higher), how many readings were there by day of week for each location type?</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751511_-1804712713","id":"20181019-194704_1426466858","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:18+0000","dateFinished":"2018-11-08T12:51:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:703"},{"text":"//Load the site information\nval sites = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"aqs_sites.csv\");\n\nsites.createOrReplaceTempView(\"v_sites\");\n\n\n//Combine the site information with the readings. Use distinct to make sure we're not pulling in extra stuff (this was verified with queries tracking count of rows - deleted for brevity)\nval pm25WithSiteInfo = sqlContext.sql(\n    \"\"\"\n    SELECT DISTINCT State, County, Site, r.Latitude, r.Longitude, Date, Time, Parameter, Measurement, HealthCategory, s.Elevation, s.`Land Use` AS Landuse, s.`Location Setting` AS LocationSetting\n    FROM v_pm25 r INNER JOIN v_sites s ON r.Latitude = s.Latitude \n    and r.Longitude = s.Longitude\n    AND r.State = s.`State Name`\n    AND r.County = s.`County Name`\n    AND r.Site = s.`Site Number`\n    \"\"\"\n    )\n\n\n\n//get the day of week\nval q2CountByDay = pm25WithSiteInfo\n            .select(\"Date\", \"LocationSetting\", \"Measurement\")\n            .filter(\"Measurement >= 35\")\n            .withColumn(\"DayOfWeek\", date_format(to_date($\"date\", \"yyyy-MM-dd\"), \"EEEE\"))\n            .withColumn(\"DayOfWeekNumber\", date_format(to_date($\"date\", \"yyyy-MM-dd\"), \"u\"))\n            .groupBy(\"LocationSetting\", \"DayOfWeek\", \"DayOfWeekNumber\")\n            .agg(count(\"Measurement\").as(\"TotalMeasurements\"))\n            .orderBy(\"LocationSetting\", \"DayOfWeekNumber\")\n            \n\n\nq2CountByDay.show(truncate=false, numRows=25)\n\nq2CountByDay.createOrReplaceTempView(\"v_q2CountByDay\")\n\n","user":"anonymous","dateUpdated":"2018-11-08T19:06:54+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sites: org.apache.spark.sql.DataFrame = [State Code: string, County Code: string ... 26 more fields]\npm25WithSiteInfo: org.apache.spark.sql.DataFrame = [State: string, County: string ... 11 more fields]\nq2CountByDay: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [LocationSetting: string, DayOfWeek: string ... 2 more fields]\n+---------------------+---------+---------------+-----------------+\n|LocationSetting      |DayOfWeek|DayOfWeekNumber|TotalMeasurements|\n+---------------------+---------+---------------+-----------------+\n|RURAL                |Monday   |1              |401              |\n|RURAL                |Tuesday  |2              |372              |\n|RURAL                |Wednesday|3              |420              |\n|RURAL                |Thursday |4              |324              |\n|RURAL                |Friday   |5              |365              |\n|RURAL                |Saturday |6              |376              |\n|RURAL                |Sunday   |7              |393              |\n|SUBURBAN             |Monday   |1              |864              |\n|SUBURBAN             |Tuesday  |2              |1015             |\n|SUBURBAN             |Wednesday|3              |1069             |\n|SUBURBAN             |Thursday |4              |965              |\n|SUBURBAN             |Friday   |5              |896              |\n|SUBURBAN             |Saturday |6              |1005             |\n|SUBURBAN             |Sunday   |7              |1032             |\n|URBAN AND CENTER CITY|Monday   |1              |943              |\n|URBAN AND CENTER CITY|Tuesday  |2              |967              |\n|URBAN AND CENTER CITY|Wednesday|3              |953              |\n|URBAN AND CENTER CITY|Thursday |4              |980              |\n|URBAN AND CENTER CITY|Friday   |5              |1052             |\n|URBAN AND CENTER CITY|Saturday |6              |992              |\n|URBAN AND CENTER CITY|Sunday   |7              |1048             |\n+---------------------+---------+---------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1540520751512_-1806636457","id":"20181019-194634_1122121326","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T19:06:54+0000","dateFinished":"2018-11-08T19:07:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:704"},{"text":"%sql\n--This is just for easy download of data for visualization\nSELECT *\nFROM v_q2CountByDay\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"LocationSetting\tDayOfWeek\tDayOfWeekNumber\tTotalMeasurements\nRURAL\tMonday\t1\t401\nRURAL\tTuesday\t2\t372\nRURAL\tWednesday\t3\t420\nRURAL\tThursday\t4\t324\nRURAL\tFriday\t5\t365\nRURAL\tSaturday\t6\t376\nRURAL\tSunday\t7\t393\nSUBURBAN\tMonday\t1\t864\nSUBURBAN\tTuesday\t2\t1015\nSUBURBAN\tWednesday\t3\t1069\nSUBURBAN\tThursday\t4\t965\nSUBURBAN\tFriday\t5\t896\nSUBURBAN\tSaturday\t6\t1005\nSUBURBAN\tSunday\t7\t1032\nURBAN AND CENTER CITY\tMonday\t1\t943\nURBAN AND CENTER CITY\tTuesday\t2\t967\nURBAN AND CENTER CITY\tWednesday\t3\t953\nURBAN AND CENTER CITY\tThursday\t4\t980\nURBAN AND CENTER CITY\tFriday\t5\t1052\nURBAN AND CENTER CITY\tSaturday\t6\t992\nURBAN AND CENTER CITY\tSunday\t7\t1048\n"}]},"apps":[],"jobName":"paragraph_1540520751514_-1805866960","id":"20181019-213535_1300877370","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:55:44+0000","dateFinished":"2018-11-08T12:57:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:705"},{"text":"%md\n# Question 3\nWhat are the 10 monitors closest to me that have had readings above 55 ug/m3, and how many readings above that level did they have in 2017?\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Question 3</h1>\n<p>What are the 10 monitors closest to me that have had readings above 55 ug/m3, and how many readings above that level did they have in 2017?</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751515_-1806251709","id":"20181019-215131_813193951","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:19+0000","dateFinished":"2018-11-08T12:51:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:706"},{"text":"//Create a UDF for figuring out distance from my house (in KM), based on the blog post here: https://dzone.com/articles/scala-calculating-distance-between-two-locations\nval measure_Dist = udf((lat: Double, lon: Double)=> {\n    //my home location\n    val startLat= 43.0955569 \n    val startLon= -89.3440317\n    \n    val AVERAGE_RADIUS_OF_EARTH_KM = 6371\n    val latDistance = Math.toRadians(startLat - lat)\n    val lngDistance = Math.toRadians(startLon - lon)\n    val sinLat = Math.sin(latDistance / 2)\n    val sinLng = Math.sin(lngDistance / 2)\n    val a = sinLat * sinLat +\n    (Math.cos(Math.toRadians(startLat)) *\n        Math.cos(Math.toRadians(lat)) *\n        sinLng * sinLng)\n    val c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n    (AVERAGE_RADIUS_OF_EARTH_KM * c).toDouble\n    \n})\n\n//filter the pm25 hourly average readings to just the high ones, and calculate distance from my house.\nval highReadings = pm25WithSiteInfo.filter(\"Measurement >= 55\").withColumn(\"Distance\", measure_Dist(col(\"Latitude\"), col(\"Longitude\")));\n\n//set up a temp view\nhighReadings.createOrReplaceTempView(\"v_highReadings\");\n\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"measure_Dist: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function2>,DoubleType,Some(List(DoubleType, DoubleType)))\nhighReadings: org.apache.spark.sql.DataFrame = [State: string, County: string ... 12 more fields]\n"}]},"apps":[],"jobName":"paragraph_1540520751515_-1806251709","id":"20181019-214946_1272223617","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:56:30+0000","dateFinished":"2018-11-08T12:57:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:707"},{"text":"%sql\n--Display the top ten sites nearest to my house with the total number of measurements per site.\nSELECT r.State, r.County, r.Site, r.Latitude, r.Longitude, Distance, LocationSetting, count(Measurement) as TotalMeasurements, rank\nFROM\n(SELECT State, County, Site, Latitude, Longitude, Measurement, Distance, LocationSetting,\nDENSE_RANK() OVER (ORDER BY Distance) as rank\nFROM v_highReadings) r\nWHERE rank < 11\nGROUP BY r.State, r.County, r.Site, r.Latitude, r.Longitude, r.rank, distance, LocationSetting\n","dateUpdated":"2018-11-08T12:51:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"State\tCounty\tSite\tLatitude\tLongitude\tDistance\tLocationSetting\tTotalMeasurements\trank\nWisconsin\tDane\t0041\t43.100837999999996\t-89.357298\t1.2268022291338558\tURBAN AND CENTER CITY\t2\t1\nWisconsin\tWaukesha\t0027\t43.020075\t-88.21507\t92.10640918069993\tURBAN AND CENTER CITY\t2\t2\nWisconsin\tMilwaukee\t0010\t43.016667\t-87.93333299999999\t114.95099111520102\tURBAN AND CENTER CITY\t1\t3\nWisconsin\tGrant\t0009\t42.6938\t-90.6979\t118.99123467614149\tRURAL\t1\t4\nIllinois\tCook\t4007\t42.060285\t-87.863225\t167.18568522344304\tSUBURBAN\t3\t5\nIowa\tLinn\t0040\t41.976769999999995\t-91.68766\t228.7849759787515\tURBAN AND CENTER CITY\t16\t6\nIndiana\tLake\t0022\t41.606667\t-87.304722\t235.55547971347363\tURBAN AND CENTER CITY\t3\t7\nIndiana\tPorter\t0024\t41.6175\t-87.199167\t240.9675256387938\tSUBURBAN\t2\t8\nIllinois\tMcLean\t2003\t40.518735\t-88.99689599999999\t287.9696465741353\tSUBURBAN\t2\t9\nIndiana\tSt. Joseph\t0015\t41.69666\t-86.214722\t300.35179141580846\tURBAN AND CENTER CITY\t2\t10\n"}]},"apps":[],"jobName":"paragraph_1540520751516_-1808175453","id":"20181019-215015_2076625839","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:708","user":"anonymous","dateFinished":"2018-11-08T12:57:54+0000","dateStarted":"2018-11-08T12:57:12+0000"},{"text":"%md\n## Question 3:\nFor 2017 (the most recent year for which we have a full year's data), is there a correlation between weather conditions and pm2.5 readings?\n\n\n\n","dateUpdated":"2018-11-08T12:51:21+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Question 3:</h2>\n<p>For 2017 (the most recent year for which we have a full year's data), is there a correlation between weather conditions and pm2.5 readings?</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751517_-1808560202","id":"20181016-180213_1053427865","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:709","user":"anonymous","dateFinished":"2018-11-08T12:51:21+0000","dateStarted":"2018-11-08T12:51:21+0000"},{"text":"//load wind data where the qualifier is null and the uncertainty is null\n\nval wind2017 = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"hourly_WIND_2017.csv\").filter(\"Qualifier is null AND Uncertainty is null\");\nwind2017.createOrReplaceTempView(\"v_wind2017\");\n\n//load temperature data where the qualifier is null and the uncertainty is null\nval temp2017 = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"hourly_TEMP_2017.csv\").filter(\"Qualifier is null AND Uncertainty is null\");\ntemp2017.createOrReplaceTempView(\"v_temp2017\");\n\n//load barometric Pressure data where the qualifier is null and the uncertainty is null\nval press2017 = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"hourly_PRESS_2017.csv\").filter(\"Qualifier is null AND Uncertainty is null\");\npress2017.createOrReplaceTempView(\"v_press2017\");\n\n//load RH and dewPoint data where the qualifier is null and the uncertainty is null\nval rh_dp2017 = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"hourly_RH_DP_2017.csv\").filter(\"Qualifier is null AND Uncertainty is null\");\nrh_dp2017.createOrReplaceTempView(\"v_rh_dp2017\");\n\n\n//Create a combined view of all the 2017 weather data\nval weather2017 = sqlContext.sql(\n    \"\"\"\n    SELECT `State Name` AS State, `County Name` AS County, `Site Num` AS Site,  Latitude, Longitude, `Date Local` as Date, `Time Local` AS Time, `Parameter Name` AS Parameter, MDL,  `Sample Measurement` AS Measurement, `Units of Measure` AS units\n    FROM v_wind2017\n    UNION\n    SELECT `State Name` AS State, `County Name` AS County, `Site Num` AS Site,  Latitude, Longitude, `Date Local` as Date, `Time Local` AS Time, `Parameter Name` AS Parameter, MDL,  `Sample Measurement` AS Measurement, `Units of Measure` AS units\n    FROM v_temp2017\n    UNION\n    SELECT `State Name` AS State, `County Name` AS County, `Site Num` AS Site, Latitude, Longitude, `Date Local` as Date, `Time Local` AS Time, `Parameter Name` AS Parameter, MDL,  `Sample Measurement` AS Measurement, `Units of Measure` AS units\n    FROM v_rh_dp2017\n    UNION\n    SELECT `State Name` AS State, `County Name` AS County, `Site Num` AS Site, Latitude, Longitude, `Date Local` as Date, `Time Local` AS Time, `Parameter Name` AS Parameter, MDL,  `Sample Measurement` AS Measurement, `Units of Measure` AS units\n    FROM v_press2017\n    \"\"\"\n    )\n\n\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"wind2017: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [State Code: string, County Code: string ... 22 more fields]\ntemp2017: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [State Code: string, County Code: string ... 22 more fields]\npress2017: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [State Code: string, County Code: string ... 22 more fields]\nrh_dp2017: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [State Code: string, County Code: string ... 22 more fields]\nweather2017: org.apache.spark.sql.DataFrame = [State: string, County: string ... 9 more fields]\n"}]},"apps":[],"jobName":"paragraph_1540520751518_-1807405955","id":"20181015-150709_234157345","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:57:13+0000","dateFinished":"2018-11-08T12:58:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:710"},{"text":"\n//fix the weather MDL\nval fixedWeather = weather2017.withColumn(\"Measurement\", fix_measure)\n//create a temp view\nfixedWeather.createOrReplaceTempView(\"v_fixedWeather\");\n\n//union the pm25 data with the weather data\nval union2017 = sqlContext.sql(\n    \"\"\"\n    SELECT State, County, Site, Latitude, Longitude, Date, Time, Parameter, Measurement\n    FROM v_fixedWeather\n    UNION \n    SELECT State, County, Site, Latitude, Longitude, Date, Time, 'PM25' AS Parameter, Measurement\n    FROM v_pm25\n    \"\"\"\n    )\n\nval pivot2017 = union2017\n        .groupBy(\"State\", \"County\", \"Site\", \"Latitude\", \"Longitude\", \"Date\", \"Time\").pivot(\"Parameter\")//pivot the data so that we have a column for each parameter\n        .agg(avg(\"Measurement\")) //get the average per reading\n\n\n//clean up the column names so that the dataframe is easier to use.\nvar pivot2017Clean = pivot2017\n  for(col <- pivot2017.columns){\n    pivot2017Clean = pivot2017Clean.withColumnRenamed(col, col.replaceAll(\"[^a-zA-Z25]\", \"\"))\n  }\n\npivot2017Clean.printSchema\n\n//create a view\npivot2017Clean.createOrReplaceTempView(\"v_2017\");","user":"anonymous","dateUpdated":"2018-11-08T12:51:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fixedWeather: org.apache.spark.sql.DataFrame = [State: string, County: string ... 9 more fields]\nunion2017: org.apache.spark.sql.DataFrame = [State: string, County: string ... 7 more fields]\npivot2017: org.apache.spark.sql.DataFrame = [State: string, County: string ... 12 more fields]\npivot2017Clean: org.apache.spark.sql.DataFrame = [State: string, County: string ... 12 more fields]\nroot\n |-- State: string (nullable = true)\n |-- County: string (nullable = true)\n |-- Site: string (nullable = true)\n |-- Latitude: string (nullable = true)\n |-- Longitude: string (nullable = true)\n |-- Date: string (nullable = true)\n |-- Time: string (nullable = true)\n |-- Barometricpressure: double (nullable = true)\n |-- DewPoint: double (nullable = true)\n |-- OutdoorTemperature: double (nullable = true)\n |-- PM25: double (nullable = true)\n |-- RelativeHumidity: double (nullable = true)\n |-- WindDirectionResultant: double (nullable = true)\n |-- WindSpeedResultant: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1540520751519_-1807790704","id":"20181016-200940_45697174","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:57:55+0000","dateFinished":"2018-11-08T13:04:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:711"},{"text":"pivot2017Clean.show()","user":"anonymous","dateUpdated":"2018-11-08T12:51:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+-----------+----+------------------+------------------+----------+-----+------------------+--------+------------------+----+----------------+----------------------+------------------+\n|       State|     County|Site|          Latitude|         Longitude|      Date| Time|Barometricpressure|DewPoint|OutdoorTemperature|PM25|RelativeHumidity|WindDirectionResultant|WindSpeedResultant|\n+------------+-----------+----+------------------+------------------+----------+-----+------------------+--------+------------------+----+----------------+----------------------+------------------+\n|    Michigan|      Wayne|0093|         42.385998|        -83.266189|2017-05-13|00:00|              null|    null|              null| 2.5|            null|                  10.0|              0.05|\n|  California|     Fresno|4001|36.597449999999995|       -119.504569|2017-01-17|05:00|            1007.5|    null|              34.0|null|            null|                  23.8|               1.3|\n|     Wyoming|   Converse|0011|          42.77612|        -105.79821|2017-12-25|23:00|             834.0|    null|             -30.0|null|            82.0|                  91.0|              null|\n|    Missouri|    Lincoln|0004|          39.04577|-90.84926999999999|2017-08-20|18:00|              null|    null|              null|null|            null|                 329.0|               0.9|\n|        Utah|   Duchesne|0002|40.294177999999995|       -110.009732|2017-05-26|20:00|             835.0|    null|              59.0| 3.1|            38.0|                  null|              null|\n|  California|Los Angeles|4008|33.859443999999996|       -118.200278|2017-11-01|14:00|              null|    null|              70.3| 3.4|            null|                 187.6|7.1000000000000005|\n|      Oregon|       Lake|0001|         42.189215|       -120.353969|2017-09-27|01:00|             858.0|    null|              53.0|null|            null|                  83.0|               3.7|\n|       Texas|    Navarro|1051|         32.031934|        -96.399141|2017-08-28|17:00|              null|    64.0|              78.0|null|            62.0|                  53.0|               7.4|\n|     Vermont| Chittenden|0014|           44.4762|          -73.2106|2017-10-17|23:00|            1010.6|    null|              52.0| 3.7|            47.0|                 165.0|               4.7|\n|  California|       Inyo|0030|         36.458104|       -117.851888|2017-12-11|13:00|              null|    null|              50.0|null|            13.0|                 211.6|               3.7|\n|        Ohio|   Franklin|0038|          40.11107|        -83.065415|2017-07-03|23:00|              null|    null|              null|null|            null|                  46.0|               0.8|\n|    Colorado|     Denver|0002|39.751183999999995|       -104.987625|2017-03-27|11:00|              null|    null|              60.0| 9.8|            null|                  34.6|               4.2|\n|       Texas|    Cameron|0006|         25.892518|         -97.49383|2017-02-15|04:00|              null|    null|              56.0|null|            null|                 340.3|6.6000000000000005|\n|     Wyoming|    Lincoln|0814|           41.7733|         -110.6297|2017-01-08|16:00|              null|    null|              24.0|null|            null|                  null|              null|\n|North Dakota|     Mercer|0004|         47.298611|       -101.766944|2017-03-19|08:00|             934.6|    null|              47.0| 2.5|            null|                 278.0|               6.9|\n|    Michigan|    Berrien|0014|          42.19779|        -86.309694|2017-03-02|17:00|              null|    null|              28.0|null|            null|                 325.0|               6.9|\n| Mississippi|      Hinds|0020|         32.329111|        -90.182722|2017-02-11|18:00|              null|    null|              76.0|null|            61.0|                 201.6|               5.9|\n|      Oregon|      Crook|0100|44.299786999999995|       -120.844773|2017-08-27|01:00|             920.0|    null|              54.0|null|            54.0|                 219.0|               0.5|\n|       Texas|     Harris|0058|         29.770698|-95.03123199999999|2017-12-18|16:00|              null|    null|              65.0| 2.5|            null|     89.10000000000001|2.3000000000000003|\n|  California|       Kern|2009|         34.841567|       -118.860588|2017-12-04|04:00| 896.3000000000001|    null|              26.0|null|            null|                 148.6|               3.9|\n+------------+-----------+----+------------------+------------------+----------+-----+------------------+--------+------------------+----+----------------+----------------------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1540520751520_-1822026413","id":"20181022-132629_1706909182","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:58:03+0000","dateFinished":"2018-11-08T13:14:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:712"},{"text":"%md\n### Assessing Skewness\nSkewness over 4 can impact the accuracy of a Pearson Correlation (http://www.pbarrett.net/techpapers/skewness.pdf). Before running correlations, we should review the skewness of each variable.","user":"anonymous","dateUpdated":"2018-11-08T12:51:23+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Assessing Skewness</h3>\n<p>Skewness over 4 can impact the accuracy of a Pearson Correlation (http://www.pbarrett.net/techpapers/skewness.pdf). Before running correlations, we should review the skewness of each variable.</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751520_-1822026413","id":"20181022-135219_1608602679","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T12:51:23+0000","dateFinished":"2018-11-08T12:51:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:713"},{"text":"\n//review the skewness of each variable\npivot2017Clean.select(skewness(\"PM25\"), skewness(\"Barometricpressure\"), skewness(\"DewPoint\"), skewness(\"outdoorTemperature\"), skewness(\"RelativeHumidity\"), skewness(\"WindDirectionResultant\"), skewness(\"WindSpeedResultant\")).show","user":"anonymous","dateUpdated":"2018-11-08T12:51:23+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+----------------------------+--------------------+----------------------------+--------------------------+--------------------------------+----------------------------+\n|    skewness(PM25)|skewness(Barometricpressure)|  skewness(DewPoint)|skewness(outdoorTemperature)|skewness(RelativeHumidity)|skewness(WindDirectionResultant)|skewness(WindSpeedResultant)|\n+------------------+----------------------------+--------------------+----------------------------+--------------------------+--------------------------------+----------------------------+\n|17.672039208736916|          20.211932482927995|-0.41734858712106326|         -0.4909505696681751|      -0.26056928803016016|            -0.13282460139044383|           1.723823803584655|\n+------------------+----------------------------+--------------------+----------------------------+--------------------------+--------------------------------+----------------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1540520751521_-1822411162","id":"20181022-131320_527970434","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T13:04:42+0000","dateFinished":"2018-11-08T13:29:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:714"},{"text":"// log transformations can improve skew. Review the skewness of log-transformed variables.\npivot2017Clean.select(skewness(log(\"PM25\")), skewness(log(\"Barometricpressure\"))).show","user":"anonymous","dateUpdated":"2018-11-08T12:51:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+---------------------------------+\n|skewness(LOG(PM25))|skewness(LOG(Barometricpressure))|\n+-------------------+---------------------------------+\n|0.31271184566814514|               1.6586783016708762|\n+-------------------+---------------------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1540520751522_-1821256916","id":"20181022-135059_675314277","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T13:14:52+0000","dateFinished":"2018-11-08T13:40:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:715"},{"text":"//add columns for log of pm25 and log of barometric pressure\nval pivotLog = pivot2017Clean.withColumn(\"logPM25\", log(\"PM25\")).withColumn(\"logBarometricPressure\", log(\"BarometricPressure\"))","user":"anonymous","dateUpdated":"2018-11-08T12:51:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pivotLog: org.apache.spark.sql.DataFrame = [State: string, County: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1540520751522_-1821256916","id":"20181022-141637_1254859752","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T13:29:42+0000","dateFinished":"2018-11-08T13:40:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:716"},{"text":"//set up an array of column names\nval colNames = Array(\"logPM25\", \"logBarometricPressure\", \"DewPoint\", \"OutdoorTemperature\", \"RelativeHumidity\", \"WindDirectionResultant\", \"WindSpeedResultant\");\n\n//get all the pairs\nval colNamePairs = colNames.flatMap(c1 => colNames.map(c2 => (c1, c2)))\n        .filterNot(p => p._1 >= p._2); //filter out the pairs that are identical or that are flip-flopped\n\n//for each pair, get the two indicators and the correlation between them\nval corrs = colNamePairs.map(x => (x._1, x._2, pivotLog.stat.corr(x._1, x._2)));\n\n//convert this to a dataframe for easy showing\nval columns=Array(\"Indicator1\", \"Indicator2\", \"Correlation\")\nvar corrsDF = sc.parallelize(corrs).toDF(columns: _*);\n\n//turn this into a temp table\ncorrsDF.createOrReplaceTempView(\"corrsT\");\n","user":"anonymous","dateUpdated":"2018-11-08T12:51:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"colNames: Array[String] = Array(logPM25, logBarometricPressure, DewPoint, OutdoorTemperature, RelativeHumidity, WindDirectionResultant, WindSpeedResultant)\ncolNamePairs: Array[(String, String)] = Array((logBarometricPressure,logPM25), (DewPoint,logPM25), (DewPoint,logBarometricPressure), (DewPoint,OutdoorTemperature), (DewPoint,RelativeHumidity), (DewPoint,WindDirectionResultant), (DewPoint,WindSpeedResultant), (OutdoorTemperature,logPM25), (OutdoorTemperature,logBarometricPressure), (OutdoorTemperature,RelativeHumidity), (OutdoorTemperature,WindDirectionResultant), (OutdoorTemperature,WindSpeedResultant), (RelativeHumidity,logPM25), (RelativeHumidity,logBarometricPressure), (RelativeHumidity,WindDirectionResultant), (RelativeHumidity,WindSpeedResultant), (WindDirectionResultant,logPM25), (WindDirectionResultant,logBarometricPressure), (WindDirectionResultant,WindSpeedResultant), (WindSpeedResultant,logPM25), (WindSpeedResultant,logBaromet...corrs: Array[(String, String, Double)] = Array((logBarometricPressure,logPM25,-0.0836677101572513), (DewPoint,logPM25,-0.033402260333297705), (DewPoint,logBarometricPressure,0.12143538347929234), (DewPoint,OutdoorTemperature,0.14517475231117036), (DewPoint,RelativeHumidity,0.23021434595679427), (DewPoint,WindDirectionResultant,0.07275172848587992), (DewPoint,WindSpeedResultant,0.09617369528816586), (OutdoorTemperature,logPM25,-0.30963549908444626), (OutdoorTemperature,logBarometricPressure,0.23302930766389182), (OutdoorTemperature,RelativeHumidity,0.28078892934385014), (OutdoorTemperature,WindDirectionResultant,0.29655861432870195), (OutdoorTemperature,WindSpeedResultant,0.2932613070097823), (RelativeHumidity,logPM25,-0.07998531391611118), (RelativeHumidity,logBarometricPressure,0.44881...columns: Array[String] = Array(Indicator1, Indicator2, Correlation)\ncorrsDF: org.apache.spark.sql.DataFrame = [Indicator1: string, Indicator2: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1540520751523_-1821641665","id":"20181023-111100_1420517541","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T13:40:44+0000","dateFinished":"2018-11-08T17:29:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:717"},{"text":"%sql\nSELECT * \nFROM corrsT","dateUpdated":"2018-11-08T12:51:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1540520751524_-1823565409","id":"20181023-155628_1417756381","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:718","user":"anonymous","dateFinished":"2018-11-08T17:29:55+0000","dateStarted":"2018-11-08T13:40:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Indicator1\tIndicator2\tCorrelation\nlogBarometricPressure\tlogPM25\t-0.0836677101572513\nDewPoint\tlogPM25\t-0.033402260333297705\nDewPoint\tlogBarometricPressure\t0.12143538347929234\nDewPoint\tOutdoorTemperature\t0.14517475231117036\nDewPoint\tRelativeHumidity\t0.23021434595679427\nDewPoint\tWindDirectionResultant\t0.07275172848587992\nDewPoint\tWindSpeedResultant\t0.09617369528816586\nOutdoorTemperature\tlogPM25\t-0.30963549908444626\nOutdoorTemperature\tlogBarometricPressure\t0.23302930766389182\nOutdoorTemperature\tRelativeHumidity\t0.28078892934385014\nOutdoorTemperature\tWindDirectionResultant\t0.29655861432870195\nOutdoorTemperature\tWindSpeedResultant\t0.2932613070097823\nRelativeHumidity\tlogPM25\t-0.07998531391611118\nRelativeHumidity\tlogBarometricPressure\t0.4488178177737082\nRelativeHumidity\tWindDirectionResultant\t0.13903893556843056\nRelativeHumidity\tWindSpeedResultant\t0.056264227813586726\nWindDirectionResultant\tlogPM25\t-0.23079562458254624\nWindDirectionResultant\tlogBarometricPressure\t0.09174735088272394\nWindDirectionResultant\tWindSpeedResultant\t0.487982340594703\nWindSpeedResultant\tlogPM25\t-0.20771834542712528\nWindSpeedResultant\tlogBarometricPressure\t0.04708008970035273\n"}]}},{"text":"%md\n#Question 5\nGiven that there are no strong correlations between weather and readings, we can compare the October 2018 readings from my sensor with the October 2017 readings from a nearby sensor. (Note, there may be other reasons there would be differences, but given that there are no overlapping dates in the data I have available, this is the best I could do.)\n\nFind the site closest to me. For this site compared to my home monitor, what is the difference in daily average PM25 readings between 10/4/18 and 10/17/18.\n\nData available: https://www.purpleair.com/sensorlist Sensor name: Sasy 1\n","dateUpdated":"2018-11-08T12:51:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Question 5</h1>\n<p>Given that there are no strong correlations between weather and readings, we can compare the October 2018 readings from my sensor with the October 2017 readings from a nearby sensor. (Note, there may be other reasons there would be differences, but given that there are no overlapping dates in the data I have available, this is the best I could do.)</p>\n<p>Find the site closest to me. For this site compared to my home monitor, what is the difference in daily average PM25 readings between 10/4/18 and 10/17/18.</p>\n<p>Data available: https://www.purpleair.com/sensorlist Sensor name: Sasy 1</p>\n"}]},"apps":[],"jobName":"paragraph_1540520751525_-1823950158","id":"20181017-212119_1229868237","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:719","user":"anonymous","dateFinished":"2018-11-08T12:51:27+0000","dateStarted":"2018-11-08T12:51:27+0000"},{"text":"import org.apache.spark.sql.functions.rank\nimport org.apache.spark.sql.expressions.Window\n\n//set up a window function\nval w = Window.orderBy($\"Distance\")\n\n\nval closeReadings = pm25WithSiteInfo.filter(\"State = 'Wisconsin'\")\n    .withColumn(\"Distance\", measure_Dist(col(\"Latitude\"), col(\"Longitude\"))) //get distance in km for those sites in Wisconsin\n    .withColumn(\"DistanceRank\", dense_rank.over(w)) //rank the sites by distance to my house\n    .filter(\"DistanceRank = 1 AND to_date(Date) > '2017-10-03' AND to_date(Date) < '2017-10-18'\") //get just the top-ranked site's readings\n    .groupBy(\"State\", \"County\", \"Site\", \"LocationSetting\", \"Date\", \"DistanceRank\", \"Distance\") //group by each site\n    .agg(avg(\"Measurement\").alias(\"AvgPM25\"))\n    .withColumn(\"Date\", col(\"Date\").cast(\"date\"))\n//view those readings\ncloseReadings.show()\n\n//make a view\ncloseReadings.createOrReplaceTempView(\"v_closeReadings\");","user":"anonymous","dateUpdated":"2018-11-08T19:17:32+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.rank\nimport org.apache.spark.sql.expressions.Window\nw: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@51f1d004\ncloseReadings: org.apache.spark.sql.DataFrame = [State: string, County: string ... 6 more fields]\n+---------+------+----+--------------------+----------+------------+------------------+------------------+\n|    State|County|Site|     LocationSetting|      Date|DistanceRank|          Distance|           AvgPM25|\n+---------+------+----+--------------------+----------+------------+------------------+------------------+\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-09|           1|1.2268022291338558| 5.270833333333333|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-12|           1|1.2268022291338558| 4.291666666666667|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-13|           1|1.2268022291338558|3.8958333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-15|           1|1.2268022291338558|2.9166666666666665|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-05|           1|1.2268022291338558|3.8333333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-16|           1|1.2268022291338558| 4.895833333333333|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-06|           1|1.2268022291338558| 5.717391304347826|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-08|           1|1.2268022291338558|3.9583333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-07|           1|1.2268022291338558|2.7916666666666665|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-04|           1|1.2268022291338558|3.3333333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-11|           1|1.2268022291338558|3.1458333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-14|           1|1.2268022291338558|3.9583333333333335|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-17|           1|1.2268022291338558| 5.354166666666667|\n|Wisconsin|  Dane|0041|URBAN AND CENTER ...|2017-10-10|           1|1.2268022291338558|             4.125|\n+---------+------+----+--------------------+----------+------------+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1540520751526_-1822795911","id":"20181022-160143_2107997805","dateCreated":"2018-10-26T02:25:51+0000","dateStarted":"2018-11-08T19:17:33+0000","dateFinished":"2018-11-08T19:18:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:720"},{"text":"//read in the sasy1 data .withColumn(\"date\", to_timestamp($\"merge\", \"yyyy-MM-dd-hh:mm a\"))\nval sasy = spark.read.format(\"csv\").option(\"header\", \"true\").load(path + \"Sasy1.csv\")\n        .withColumn(\"Date\", col(\"created_at\").cast(\"date\")) //make the created_at a date timestamp, dropping the time\n        .groupBy(\"Date\") //group by date\n        .agg(avg(\"`PM2.5_CF_ATM_ug/m3`\").alias(\"AvgPM25\"))\nsasy.printSchema()\nsasy.show()\n\n//make a view\nsasy.createOrReplaceTempView(\"v_sasy\");","dateUpdated":"2018-11-08T19:19:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sasy: org.apache.spark.sql.DataFrame = [Date: date, AvgPM25: double]\nroot\n |-- Date: date (nullable = true)\n |-- AvgPM25: double (nullable = true)\n\n+----------+------------------+\n|      Date|           AvgPM25|\n+----------+------------------+\n|2018-10-05| 5.828283018867917|\n|2018-10-04|6.9811764705882355|\n|2018-10-09|16.485110047846877|\n|2018-10-07| 3.509934944237919|\n|2018-10-15| 4.163392029657094|\n|2018-10-13| 8.782613531047273|\n|2018-10-08| 9.651150278293132|\n|2018-10-17| 1.408429035752978|\n|2018-10-10|6.7690739008418985|\n|2018-10-12|3.9390601503759353|\n|2018-10-16| 8.156142857142854|\n|2018-10-06| 7.765047258979215|\n|2018-10-11|0.6943113207547167|\n|2018-10-14|13.022878504672896|\n+----------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1540520751526_-1822795911","id":"20181022-160641_1616464974","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:721","user":"anonymous","dateFinished":"2018-11-08T19:19:18+0000","dateStarted":"2018-11-08T19:19:15+0000"},{"text":"%sql\n-- Join the datasets on the same month and day, but ignoring the year\nSELECT State, County, Site, LocationSetting, c.Date, DistanceRank, Distance, c.AvgPM25 as EPA_PM25, s.AvgPM25 as HOME_PM25, s.AvgPM25 - c.AvgPM25 AS Difference\nFROM v_closeReadings c INNER JOIN v_sasy s ON month(c.Date) = month(s.Date) AND Day(c.Date) = Day(s.Date)","dateUpdated":"2018-11-08T19:19:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"State\tCounty\tSite\tLocationSetting\tDate\tDistanceRank\tDistance\tEPA_PM25\tHOME_PM25\tDifference\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-09\t1\t1.2268022291338558\t5.270833333333333\t16.485110047846877\t11.214276714513545\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-12\t1\t1.2268022291338558\t4.291666666666667\t3.9390601503759353\t-0.3526065162907317\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-13\t1\t1.2268022291338558\t3.8958333333333335\t8.782613531047273\t4.886780197713939\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-15\t1\t1.2268022291338558\t2.9166666666666665\t4.163392029657094\t1.2467253629904271\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-05\t1\t1.2268022291338558\t3.8333333333333335\t5.828283018867917\t1.9949496855345834\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-16\t1\t1.2268022291338558\t4.895833333333333\t8.156142857142854\t3.2603095238095205\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-06\t1\t1.2268022291338558\t5.717391304347826\t7.765047258979215\t2.047655954631389\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-08\t1\t1.2268022291338558\t3.9583333333333335\t9.651150278293132\t5.692816944959798\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-07\t1\t1.2268022291338558\t2.7916666666666665\t3.509934944237919\t0.7182682775712523\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-04\t1\t1.2268022291338558\t3.3333333333333335\t6.9811764705882355\t3.647843137254902\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-11\t1\t1.2268022291338558\t3.1458333333333335\t0.6943113207547167\t-2.451522012578617\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-14\t1\t1.2268022291338558\t3.9583333333333335\t13.022878504672896\t9.064545171339562\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-17\t1\t1.2268022291338558\t5.354166666666667\t1.408429035752978\t-3.9457376309136887\nWisconsin\tDane\t0041\tURBAN AND CENTER CITY\t2017-10-10\t1\t1.2268022291338558\t4.125\t6.7690739008418985\t2.6440739008418985\n"}]},"apps":[],"jobName":"paragraph_1540520751527_-1823180660","id":"20181022-163504_735223032","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:722","user":"anonymous","dateFinished":"2018-11-08T19:19:47+0000","dateStarted":"2018-11-08T19:19:20+0000"},{"text":"%sql\n--Union instead of join for tableau output\nSELECT month(date) || '/' || day(date) || '/2017' AS Date, AvgPM25, 'Nearby' AS Site\nFROM v_closeReadings\nUNION\nSELECT month(date) || '/' || day(date) || '/2017' AS Date, AvgPM25, 'Home' AS Site\nFROM v_sasy ","dateUpdated":"2018-11-08T19:20:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Date\tAvgPM25\tSite\n10/8/2017\t3.9583333333333335\tNearby\n10/15/2017\t2.9166666666666665\tNearby\n10/9/2017\t5.270833333333333\tNearby\n10/17/2017\t1.408429035752978\tHome\n10/12/2017\t4.291666666666667\tNearby\n10/5/2017\t3.8333333333333335\tNearby\n10/5/2017\t5.828283018867917\tHome\n10/15/2017\t4.163392029657094\tHome\n10/9/2017\t16.485110047846877\tHome\n10/7/2017\t2.7916666666666665\tNearby\n10/10/2017\t4.125\tNearby\n10/11/2017\t0.6943113207547167\tHome\n10/13/2017\t3.8958333333333335\tNearby\n10/7/2017\t3.509934944237919\tHome\n10/12/2017\t3.9390601503759353\tHome\n10/4/2017\t3.3333333333333335\tNearby\n10/16/2017\t8.156142857142854\tHome\n10/6/2017\t7.765047258979215\tHome\n10/16/2017\t4.895833333333333\tNearby\n10/14/2017\t13.022878504672896\tHome\n10/10/2017\t6.7690739008418985\tHome\n10/13/2017\t8.782613531047273\tHome\n10/4/2017\t6.9811764705882355\tHome\n10/11/2017\t3.1458333333333335\tNearby\n10/17/2017\t5.354166666666667\tNearby\n10/6/2017\t5.717391304347826\tNearby\n10/14/2017\t3.9583333333333335\tNearby\n10/8/2017\t9.651150278293132\tHome\n"}]},"apps":[],"jobName":"paragraph_1540520751528_-1825104405","id":"20181022-175854_1378443127","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:723","user":"anonymous","dateFinished":"2018-11-08T19:20:48+0000","dateStarted":"2018-11-08T19:20:17+0000"},{"text":"%sql\n","dateUpdated":"2018-11-08T12:51:30+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1540520751528_-1825104405","id":"20181024-182713_1998245883","dateCreated":"2018-10-26T02:25:51+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:724","user":"anonymous"}],"name":"Schneider-Problem 3","id":"2DSREZ8YB","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}